[pytest]
# Pytest configuration for Personal Life Tracker

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test output options
addopts = 
    # Show verbose output with test names
    -v
    # Show captured stdout/stderr on failure
    -s
    # Show local variables in tracebacks
    -l
    # Strict markers
    --strict-markers
    # Warnings
    -W ignore::DeprecationWarning
    -W ignore::PendingDeprecationWarning

# Test paths
testpaths = tests

# Markers for organizing tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests that require API mocking
    file_io: marks tests that perform file I/O operations
    visualization: marks tests for visualization functions

# Coverage settings
[coverage:run]
source = .
omit = 
    tests/*
    */tests/*
    */test_*.py
    setup.py
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    # Standard pragma
    pragma: no cover
    
    # Debug-only code
    def __repr__
    
    # Abstract methods
    raise NotImplementedError
    
    # Defensive programming
    raise AssertionError
    
    # Non-runnable code
    if __name__ == .__main__.:
    
    # Type checking blocks
    if TYPE_CHECKING:

# Pytest plugins
plugins = 
    # Built-in plugins we use
    pytest.mark
    pytest.fixture
    pytest.monkeypatch

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 60

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto